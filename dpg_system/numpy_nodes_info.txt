Class: NumpyGeneratorNode
Node(s): np.rand, np.ones, np.zeros
description:
	Node description goes here

inputs:
	 : data_type
	min : data_type
	max : data_type

properties:
	dim  : property_type : property_description

options:
	dtype : option_type : option_description

output:

----------------------------------------

Class: NumpyLinSpaceNode
Node(s): np.linspace
description:
	Node description goes here

inputs:
	 : data_type

properties:
	start : property_type : property_description
	stop : property_type : property_description
	steps : property_type : property_description
	dtype : property_type : property_description

options:

output:
	linspace out : output_description

----------------------------------------

Class: NumpyUnaryNode
Node(s): np.sum, np.mean, np.std, np.var, np.median, np.linalg.det
description:
	Node description goes here

inputs:
	in : data_type

properties:

options:

output:

----------------------------------------

Class: NumpyBinaryNode
Node(s): np.stack, np.concatenate
description:
	Node description goes here

inputs:
	in : data_type
	in 2 : data_type

properties:

options:

output:

----------------------------------------

Class: NumpyDotProductNode
Node(s): np.dot
description:
	Node description goes here

inputs:
	in 1 : data_type
	in 2 : data_type

properties:

options:

output:
	dot product : output_description

----------------------------------------

Class: NumpyInnerOuterProductNode
Node(s): np.outer, np.inner
description:
	Node description goes here

inputs:
	in 1 : data_type
	in 2 : data_type

properties:

options:

output:
	outer_product : output_description
	inner_product : output_description

----------------------------------------

Class: NumpyMatMulNode
Node(s): np.matmul
description:
	Node description goes here

inputs:
	in 1 : data_type
	in 2 : data_type

properties:

options:

output:
	mat mul result : output_description

----------------------------------------

Class: NumpyCrossProductNode
Node(s): np.cross
description:
	Node description goes here

inputs:
	in 1 : data_type
	in 2 : data_type

properties:

options:

output:
	cross product : output_description

----------------------------------------

Class: NumpySqueezeNode
Node(s): np.squeeze
description:
	Node description goes here

inputs:
	input : data_type

properties:
	axis : property_type : property_description

options:

output:
	squeezed array : output_description

----------------------------------------

Class: NumpyExpandDimsNode
Node(s): np.expand_dims, np.unsqueeze
description:
	Node description goes here

inputs:
	input : data_type

properties:
	axis : property_type : property_description

options:

output:
	array out : output_description

----------------------------------------

Class: NumpyRepeatNode
Node(s): np.repeat
description:
	Node description goes here

inputs:
	input : data_type
	repeats : data_type
	axis : data_type

properties:

options:

output:
	array out : output_description

----------------------------------------

Class: NumpyCropNode
Node(s): np.crop
description:
	Node description goes here

inputs:
	image in : data_type
	left : data_type
	top : data_type
	right : data_type
	bottom : data_type

properties:
	uncrop : property_type : property_description

options:

output:
	out array : output_description

----------------------------------------

Class: NumpyClipNode
Node(s): np.clip, np.min, np.max
description:
	Node description goes here

inputs:
	input : data_type

properties:
	min : property_type : property_description
	max : property_type : property_description

options:

output:
	out array : output_description

----------------------------------------

Class: NumpyRollNode
Node(s): np.roll
description:
	Node description goes here

inputs:
	input : data_type
	shifts : data_type
	axis : data_type

properties:

options:

output:
	rolled array : output_description

----------------------------------------

Class: NumpyFlipNode
Node(s): np.flip
description:
	Node description goes here

inputs:
	input : data_type
	axis : data_type

properties:

options:

output:
	flipped array : output_description

----------------------------------------

Class: NumpyTransposeNode
Node(s): np.transpose
description:
	Node description goes here

inputs:
	input : data_type
	axis : data_type

properties:

options:

output:
	transposed array : output_description

----------------------------------------

Class: NumpyAsTypeNode
Node(s): np.astype
description:
	Node description goes here

inputs:
	input array : data_type

properties:
	type : property_type : property_description

options:

output:
	converted array : output_description

----------------------------------------

Class: FlattenMatrixNode
Node(s): flatten, np.ravel
description:
	Node description goes here

inputs:
	input : data_type

properties:
	order : property_type : property_description

options:

output:
	flattened array : output_description

----------------------------------------

Class: NumpyUnaryLinearAlgebraNode
Node(s): np.linalg.norm, euclidean distance, np.linalg.det, np.linalg.matrix rank
description:
	Node description goes here

inputs:
	input : data_type

properties:

options:

output:

----------------------------------------

Class: NumpyShapeNode
Node(s): np.shape
description:
	Node description goes here

inputs:
	np in : data_type

properties:

options:

output:
	shape : output_description

----------------------------------------

Class: NumpyRotateNode
Node(s): np.rotate, np.rotate90
description:
	Node description goes here

inputs:
	input : data_type
	k : data_type
	axis 1 : data_type
	axis 2 : data_type

properties:

options:

output:
	rotated array : output_description

----------------------------------------

